%% Training on sound presentation PC
% This script runs on the sound presentation PC and presents the first
% Block of the two competing speaker paradigm for training. It uses LSL to 
% send an audio marker to the recording PC when the sound starts. For sound 
% presentation Psychtoolbox 3 was originally used. Unfortunately this does
% not work anymore with my current Matlab R2020a Version. Shifting to a
% newer Version of Psychtoolbox may help. For the first Block audio marker
% and EEG data was recorded on the recording PC in a typical .xdf file. 
%
% Copyright (C) 2019  Manuela Jaeger, University of Oldenburg,
% manuela.jaeger@uni-oldenburg.de
% 
% This program is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.
% 
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with this program.  If not, see <https://www.gnu.org/licenses/>.

%%
clear
close all

stimuli_path='C:\Experiments\vpk_SPINE\stimuli_TASCAR';
% stimuli_path='C:\Experiments\vpk_SPINE\stimuli_TASCAR\timing_test'; % timing test path
%% Some parameters
% attended side
side = 1; % 1=left 2=right
% block to present
block = 1;
angle = 60;
%% Establish connection to LSL
% load library:
lib = lsl_loadlib();
marker_info = lsl_streaminfo(lib, 'spineAudioMarkers', 'Markers', ...
    1, 0, 'cf_string', 'spineAudioMarkers');
marker_outlet = lsl_outlet(marker_info);
%% Load audio data
filename=[stimuli_path '\block0' num2str(block) '_' num2str(angle) '.wav'];
disp(filename);
[audiosig, fs]=audioread(filename);
num_rows = size(audiosig, 1);
output_array = zeros(num_rows, 6);
output_array(:, 5) = audiosig(:, 1);
output_array(:, 6) = audiosig(:, 2);
audiodur=ceil(size(output_array,1)./fs);

marker_start=['B' num2str(block) '1'];
marker_end=['B' num2str(block) '2'];
disp(['Sending "audio start marker" (' marker_start ')...']);
%% Pause until key press
% Key press starts the sound presentation
disp('Press a key to continue')
pause(); 
%% Present screen cross
figure('units','normalized', ...
            'outerposition',[0 0 1 1], ...
            'Name','Auditory Attention Task', ...
            'NumberTitle','off',...
            'WindowState', 'maximized');
gx=fill([-0.15 -0.15 -0.025 -0.025 0.025 0.025 0.15 0.15 0.025 0.025 -0.025 -0.025],([0.225 0.275 0.275 0.4 0.4 0.275 0.275 0.225 0.225 0.1 0.1 0.225])-0.25,[255/255 255/255 255/255],'Edgecolor','none');
hold all
xlim([-1.5 1.5]); ylim([-1 1]);
set(gca,'Color',[0.5 0.5 0.5]);
set(gca,'xtick',[]); set(gca,'ytick',[]);  
set(gca,'visible','off');
set(gcf,'menubar','none','toolbar','none');
%pause(5)
% present arrow pointing to the to be attended side
if side == 1
    screenInstr = text(0, 0.8,'\leftarrow','fontsize',130, ...
        'HorizontalAlignment','center');
else
    screenInstr = text(0, 0.8,'\rightarrow','fontsize',130, ...
        'HorizontalAlignment','center');
end
pause(1)
% delete arrow
delete(screenInstr);
%% Present audio data via Psychtoolbox 3 and send audio marker via LSL
pause(0.5);
InitializePsychSound(1);
PsychPortAudio('Close'); 
pahandle=PsychPortAudio('Open',[],[],2,fs,6,0);
PsychPortAudio('FillBuffer',pahandle,output_array');
% Send audio marker start
marker_outlet.push_sample({marker_start});
PsychPortAudio('Start',pahandle,1,0);
WaitSecs(audiodur);
PsychPortAudio('Stop', pahandle);
PsychPortAudio('Close', pahandle);
pause(1);
disp(['Sending "audio end marker" (' marker_end ')...']);
marker_outlet.push_sample({marker_end}); 
%% Present on screen: 1. block done
screenInstr = text(0, 0.8,'1. Block geschafft','fontsize',80,'HorizontalAlignment','center');

%eof